/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./context/AuthContext.js":
/*!********************************!*\
  !*** ./context/AuthContext.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _services_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/api */ \"./services/api.js\");\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nfunction AuthProvider({ children }) {\n    const [credentials, setCredentials] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isAuthenticated, setIsAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [isOfflineMode, setIsOfflineMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Verificar se há credenciais no localStorage ao carregar\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const accessKey = localStorage.getItem(\"s3_access_key\");\n        const secretKey = localStorage.getItem(\"s3_secret_key\");\n        if (accessKey && secretKey) {\n            setCredentials({\n                accessKey,\n                secretKey\n            });\n            setIsAuthenticated(true);\n        }\n        setIsLoading(false);\n    }, []);\n    // Função para login com validação na AWS\n    const login = async (accessKey, secretKey)=>{\n        try {\n            // Verificar se o backend está disponível\n            try {\n                // Tentar validar as credenciais\n                const result = await _services_api__WEBPACK_IMPORTED_MODULE_2__[\"default\"].validateCredentials(accessKey, secretKey);\n                if (result.success) {\n                    // Armazenar credenciais no localStorage apenas se forem válidas\n                    localStorage.setItem(\"s3_access_key\", accessKey);\n                    localStorage.setItem(\"s3_secret_key\", secretKey);\n                    // Atualizar o estado\n                    setCredentials({\n                        accessKey,\n                        secretKey\n                    });\n                    setIsAuthenticated(true);\n                    setIsOfflineMode(false);\n                    return {\n                        success: true\n                    };\n                } else {\n                    return {\n                        success: false,\n                        error: result.error || \"Credenciais inv\\xe1lidas\"\n                    };\n                }\n            } catch (apiError) {\n                console.error(\"Erro na API:\", apiError);\n                // Se o backend não estiver disponível, usar validação local temporária\n                console.log(\"Backend n\\xe3o dispon\\xedvel, usando valida\\xe7\\xe3o local tempor\\xe1ria\");\n                setIsOfflineMode(true);\n                // Verificação básica para simular validação\n                if (!accessKey || accessKey.length < 5 || !secretKey || secretKey.length < 5) {\n                    return {\n                        success: false,\n                        error: \"Credenciais inv\\xe1lidas. Access Key e Secret Key devem ter pelo menos 5 caracteres.\"\n                    };\n                }\n                // Armazenar credenciais no localStorage\n                localStorage.setItem(\"s3_access_key\", accessKey);\n                localStorage.setItem(\"s3_secret_key\", secretKey);\n                // Atualizar o estado\n                setCredentials({\n                    accessKey,\n                    secretKey\n                });\n                setIsAuthenticated(true);\n                return {\n                    success: true,\n                    warning: \"Backend n\\xe3o dispon\\xedvel. Usando modo offline.\"\n                };\n            }\n        } catch (error) {\n            console.error(\"Erro ao fazer login:\", error);\n            return {\n                success: false,\n                error: \"Erro ao processar o login. Por favor, tente novamente.\"\n            };\n        }\n    };\n    // Função para logout\n    const logout = ()=>{\n        // Remover credenciais do localStorage\n        localStorage.removeItem(\"s3_access_key\");\n        localStorage.removeItem(\"s3_secret_key\");\n        // Atualizar o estado\n        setCredentials(null);\n        setIsAuthenticated(false);\n        setIsOfflineMode(false);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            credentials,\n            isAuthenticated,\n            isLoading,\n            isOfflineMode,\n            login,\n            logout\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\context\\\\AuthContext.js\",\n        lineNumber: 97,\n        columnNumber: 5\n    }, this);\n}\nfunction useAuth() {\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ZnJvbnRlbmQtbmV4dC8uL2NvbnRleHQvQXV0aENvbnRleHQuanM/MTM5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGFwaVNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvYXBpJztcblxuY29uc3QgQXV0aENvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBBdXRoUHJvdmlkZXIoeyBjaGlsZHJlbiB9KSB7XG4gIGNvbnN0IFtjcmVkZW50aWFscywgc2V0Q3JlZGVudGlhbHNdID0gdXNlU3RhdGUobnVsbCk7XG4gIGNvbnN0IFtpc0F1dGhlbnRpY2F0ZWQsIHNldElzQXV0aGVudGljYXRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtpc0xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgW2lzT2ZmbGluZU1vZGUsIHNldElzT2ZmbGluZU1vZGVdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIC8vIFZlcmlmaWNhciBzZSBow6EgY3JlZGVuY2lhaXMgbm8gbG9jYWxTdG9yYWdlIGFvIGNhcnJlZ2FyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgYWNjZXNzS2V5ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3MzX2FjY2Vzc19rZXknKTtcbiAgICBjb25zdCBzZWNyZXRLZXkgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnczNfc2VjcmV0X2tleScpO1xuICAgIFxuICAgIGlmIChhY2Nlc3NLZXkgJiYgc2VjcmV0S2V5KSB7XG4gICAgICBzZXRDcmVkZW50aWFscyh7IGFjY2Vzc0tleSwgc2VjcmV0S2V5IH0pO1xuICAgICAgc2V0SXNBdXRoZW50aWNhdGVkKHRydWUpO1xuICAgIH1cbiAgICBcbiAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICB9LCBbXSk7XG5cbiAgLy8gRnVuw6fDo28gcGFyYSBsb2dpbiBjb20gdmFsaWRhw6fDo28gbmEgQVdTXG4gIGNvbnN0IGxvZ2luID0gYXN5bmMgKGFjY2Vzc0tleSwgc2VjcmV0S2V5KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIFZlcmlmaWNhciBzZSBvIGJhY2tlbmQgZXN0w6EgZGlzcG9uw612ZWxcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRlbnRhciB2YWxpZGFyIGFzIGNyZWRlbmNpYWlzXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGFwaVNlcnZpY2UudmFsaWRhdGVDcmVkZW50aWFscyhhY2Nlc3NLZXksIHNlY3JldEtleSk7XG4gICAgICAgIFxuICAgICAgICBpZiAocmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgICAgICAvLyBBcm1hemVuYXIgY3JlZGVuY2lhaXMgbm8gbG9jYWxTdG9yYWdlIGFwZW5hcyBzZSBmb3JlbSB2w6FsaWRhc1xuICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdzM19hY2Nlc3Nfa2V5JywgYWNjZXNzS2V5KTtcbiAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnczNfc2VjcmV0X2tleScsIHNlY3JldEtleSk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gQXR1YWxpemFyIG8gZXN0YWRvXG4gICAgICAgICAgc2V0Q3JlZGVudGlhbHMoeyBhY2Nlc3NLZXksIHNlY3JldEtleSB9KTtcbiAgICAgICAgICBzZXRJc0F1dGhlbnRpY2F0ZWQodHJ1ZSk7XG4gICAgICAgICAgc2V0SXNPZmZsaW5lTW9kZShmYWxzZSk7XG4gICAgICAgICAgXG4gICAgICAgICAgcmV0dXJuIHsgc3VjY2VzczogdHJ1ZSB9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogcmVzdWx0LmVycm9yIHx8ICdDcmVkZW5jaWFpcyBpbnbDoWxpZGFzJyB9O1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChhcGlFcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvIG5hIEFQSTonLCBhcGlFcnJvcik7XG4gICAgICAgIFxuICAgICAgICAvLyBTZSBvIGJhY2tlbmQgbsOjbyBlc3RpdmVyIGRpc3BvbsOtdmVsLCB1c2FyIHZhbGlkYcOnw6NvIGxvY2FsIHRlbXBvcsOhcmlhXG4gICAgICAgIGNvbnNvbGUubG9nKCdCYWNrZW5kIG7Do28gZGlzcG9uw612ZWwsIHVzYW5kbyB2YWxpZGHDp8OjbyBsb2NhbCB0ZW1wb3LDoXJpYScpO1xuICAgICAgICBzZXRJc09mZmxpbmVNb2RlKHRydWUpO1xuICAgICAgICBcbiAgICAgICAgLy8gVmVyaWZpY2HDp8OjbyBiw6FzaWNhIHBhcmEgc2ltdWxhciB2YWxpZGHDp8Ojb1xuICAgICAgICBpZiAoIWFjY2Vzc0tleSB8fCBhY2Nlc3NLZXkubGVuZ3RoIDwgNSB8fCAhc2VjcmV0S2V5IHx8IHNlY3JldEtleS5sZW5ndGggPCA1KSB7XG4gICAgICAgICAgcmV0dXJuIHsgXG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSwgXG4gICAgICAgICAgICBlcnJvcjogJ0NyZWRlbmNpYWlzIGludsOhbGlkYXMuIEFjY2VzcyBLZXkgZSBTZWNyZXQgS2V5IGRldmVtIHRlciBwZWxvIG1lbm9zIDUgY2FyYWN0ZXJlcy4nIFxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIEFybWF6ZW5hciBjcmVkZW5jaWFpcyBubyBsb2NhbFN0b3JhZ2VcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3MzX2FjY2Vzc19rZXknLCBhY2Nlc3NLZXkpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnczNfc2VjcmV0X2tleScsIHNlY3JldEtleSk7XG4gICAgICAgIFxuICAgICAgICAvLyBBdHVhbGl6YXIgbyBlc3RhZG9cbiAgICAgICAgc2V0Q3JlZGVudGlhbHMoeyBhY2Nlc3NLZXksIHNlY3JldEtleSB9KTtcbiAgICAgICAgc2V0SXNBdXRoZW50aWNhdGVkKHRydWUpO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHsgXG4gICAgICAgICAgc3VjY2VzczogdHJ1ZSwgXG4gICAgICAgICAgd2FybmluZzogJ0JhY2tlbmQgbsOjbyBkaXNwb27DrXZlbC4gVXNhbmRvIG1vZG8gb2ZmbGluZS4nIFxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIGZhemVyIGxvZ2luOicsIGVycm9yKTtcbiAgICAgIHJldHVybiB7IFxuICAgICAgICBzdWNjZXNzOiBmYWxzZSwgXG4gICAgICAgIGVycm9yOiAnRXJybyBhbyBwcm9jZXNzYXIgbyBsb2dpbi4gUG9yIGZhdm9yLCB0ZW50ZSBub3ZhbWVudGUuJyBcbiAgICAgIH07XG4gICAgfVxuICB9O1xuXG4gIC8vIEZ1bsOnw6NvIHBhcmEgbG9nb3V0XG4gIGNvbnN0IGxvZ291dCA9ICgpID0+IHtcbiAgICAvLyBSZW1vdmVyIGNyZWRlbmNpYWlzIGRvIGxvY2FsU3RvcmFnZVxuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdzM19hY2Nlc3Nfa2V5Jyk7XG4gICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3MzX3NlY3JldF9rZXknKTtcbiAgICBcbiAgICAvLyBBdHVhbGl6YXIgbyBlc3RhZG9cbiAgICBzZXRDcmVkZW50aWFscyhudWxsKTtcbiAgICBzZXRJc0F1dGhlbnRpY2F0ZWQoZmFsc2UpO1xuICAgIHNldElzT2ZmbGluZU1vZGUoZmFsc2UpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEF1dGhDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IFxuICAgICAgY3JlZGVudGlhbHMsIFxuICAgICAgaXNBdXRoZW50aWNhdGVkLCBcbiAgICAgIGlzTG9hZGluZywgXG4gICAgICBpc09mZmxpbmVNb2RlLFxuICAgICAgbG9naW4sIFxuICAgICAgbG9nb3V0IFxuICAgIH19PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQXV0aENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VBdXRoKCkge1xuICByZXR1cm4gdXNlQ29udGV4dChBdXRoQ29udGV4dCk7XG59Il0sIm5hbWVzIjpbImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJhcGlTZXJ2aWNlIiwiQXV0aENvbnRleHQiLCJBdXRoUHJvdmlkZXIiLCJjaGlsZHJlbiIsImNyZWRlbnRpYWxzIiwic2V0Q3JlZGVudGlhbHMiLCJpc0F1dGhlbnRpY2F0ZWQiLCJzZXRJc0F1dGhlbnRpY2F0ZWQiLCJpc0xvYWRpbmciLCJzZXRJc0xvYWRpbmciLCJpc09mZmxpbmVNb2RlIiwic2V0SXNPZmZsaW5lTW9kZSIsImFjY2Vzc0tleSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZWNyZXRLZXkiLCJsb2dpbiIsInJlc3VsdCIsInZhbGlkYXRlQ3JlZGVudGlhbHMiLCJzdWNjZXNzIiwic2V0SXRlbSIsImVycm9yIiwiYXBpRXJyb3IiLCJjb25zb2xlIiwibG9nIiwibGVuZ3RoIiwid2FybmluZyIsImxvZ291dCIsInJlbW92ZUl0ZW0iLCJQcm92aWRlciIsInZhbHVlIiwidXNlQXV0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./context/AuthContext.js\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _context_AuthContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context/AuthContext */ \"./context/AuthContext.js\");\n\n\n\n\n\nfunction App({ Component, pageProps }) {\n    const [notifications, setNotifications] = (0,react__WEBPACK_IMPORTED_MODULE_3__.useState)([]);\n    const showNotification = (message, type = \"success\")=>{\n        const id = Date.now();\n        setNotifications((prev)=>[\n                ...prev,\n                {\n                    id,\n                    message,\n                    type\n                }\n            ]);\n        // Auto-remover após 3 segundos (tempo reduzido)\n        setTimeout(()=>{\n            setNotifications((prev)=>prev.filter((notification)=>notification.id !== id));\n        }, 3000);\n        return id;\n    };\n    const hideNotification = (id)=>{\n        setNotifications((prev)=>prev.filter((notification)=>notification.id !== id));\n    };\n    // Adicionar showNotification ao contexto global\n    pageProps.showNotification = showNotification;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_AuthContext__WEBPACK_IMPORTED_MODULE_4__.AuthProvider, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_2___default()), {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                    name: \"viewport\",\n                    content: \"width=device-width, initial-scale=1.0\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\pages\\\\_app.js\",\n                    lineNumber: 31,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\pages\\\\_app.js\",\n                lineNumber: 30,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\pages\\\\_app.js\",\n                lineNumber: 34,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"notification-container\",\n                children: notifications.map((notification)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: `notification ${notification.type} show`,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"notification-icon\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {\n                                    className: `fas ${notification.type === \"success\" ? \"fa-check-circle\" : \"fa-exclamation-circle\"}`\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\pages\\\\_app.js\",\n                                    lineNumber: 44,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\pages\\\\_app.js\",\n                                lineNumber: 43,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"notification-content\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    children: notification.message\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\pages\\\\_app.js\",\n                                    lineNumber: 47,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\pages\\\\_app.js\",\n                                lineNumber: 46,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: \"notification-close ml-4\",\n                                onClick: ()=>hideNotification(notification.id),\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {\n                                    className: \"fas fa-times\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\pages\\\\_app.js\",\n                                    lineNumber: 53,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\pages\\\\_app.js\",\n                                lineNumber: 49,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, notification.id, true, {\n                        fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\pages\\\\_app.js\",\n                        lineNumber: 39,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\pages\\\\_app.js\",\n                lineNumber: 37,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Projetos Git\\\\AWS Services\\\\frontend-next\\\\pages\\\\_app.js\",\n        lineNumber: 29,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStCO0FBQ0Y7QUFDSTtBQUNxQjtBQUV2QyxTQUFTRyxJQUFJLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFFO0lBQ2xELE1BQU0sQ0FBQ0MsZUFBZUMsaUJBQWlCLEdBQUdOLCtDQUFRQSxDQUFDLEVBQUU7SUFFckQsTUFBTU8sbUJBQW1CLENBQUNDLFNBQVNDLE9BQU8sU0FBUztRQUNqRCxNQUFNQyxLQUFLQyxLQUFLQyxHQUFHO1FBQ25CTixpQkFBaUJPLENBQUFBLE9BQVE7bUJBQUlBO2dCQUFNO29CQUFFSDtvQkFBSUY7b0JBQVNDO2dCQUFLO2FBQUU7UUFFekQsZ0RBQWdEO1FBQ2hESyxXQUFXO1lBQ1RSLGlCQUFpQk8sQ0FBQUEsT0FBUUEsS0FBS0UsTUFBTSxDQUFDQyxDQUFBQSxlQUFnQkEsYUFBYU4sRUFBRSxLQUFLQTtRQUMzRSxHQUFHO1FBRUgsT0FBT0E7SUFDVDtJQUVBLE1BQU1PLG1CQUFtQixDQUFDUDtRQUN4QkosaUJBQWlCTyxDQUFBQSxPQUFRQSxLQUFLRSxNQUFNLENBQUNDLENBQUFBLGVBQWdCQSxhQUFhTixFQUFFLEtBQUtBO0lBQzNFO0lBRUEsZ0RBQWdEO0lBQ2hETixVQUFVRyxnQkFBZ0IsR0FBR0E7SUFFN0IscUJBQ0UsOERBQUNOLDhEQUFZQTs7MEJBQ1gsOERBQUNGLGtEQUFJQTswQkFDSCw0RUFBQ21CO29CQUFLQyxNQUFLO29CQUFXQyxTQUFROzs7Ozs7Ozs7OzswQkFHaEMsOERBQUNqQjtnQkFBVyxHQUFHQyxTQUFTOzs7Ozs7MEJBR3hCLDhEQUFDaUI7Z0JBQUlYLElBQUc7MEJBQ0xMLGNBQWNpQixHQUFHLENBQUNOLENBQUFBLDZCQUNqQiw4REFBQ0s7d0JBRUNFLFdBQVcsQ0FBQyxhQUFhLEVBQUVQLGFBQWFQLElBQUksQ0FBQyxLQUFLLENBQUM7OzBDQUVuRCw4REFBQ1k7Z0NBQUlFLFdBQVU7MENBQ2IsNEVBQUNDO29DQUFFRCxXQUFXLENBQUMsSUFBSSxFQUFFUCxhQUFhUCxJQUFJLEtBQUssWUFBWSxvQkFBb0Isd0JBQXdCLENBQUM7Ozs7Ozs7Ozs7OzBDQUV0Ryw4REFBQ1k7Z0NBQUlFLFdBQVU7MENBQ2IsNEVBQUNFOzhDQUFHVCxhQUFhUixPQUFPOzs7Ozs7Ozs7OzswQ0FFMUIsOERBQUNrQjtnQ0FDQ0gsV0FBVTtnQ0FDVkksU0FBUyxJQUFNVixpQkFBaUJELGFBQWFOLEVBQUU7MENBRS9DLDRFQUFDYztvQ0FBRUQsV0FBVTs7Ozs7Ozs7Ozs7O3VCQWJWUCxhQUFhTixFQUFFOzs7Ozs7Ozs7Ozs7Ozs7O0FBb0JoQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLW5leHQvLi9wYWdlcy9fYXBwLmpzP2UwYWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuLi9zdHlsZXMvZ2xvYmFscy5jc3MnO1xuaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJztcbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQXV0aFByb3ZpZGVyIH0gZnJvbSAnLi4vY29udGV4dC9BdXRoQ29udGV4dCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH0pIHtcbiAgY29uc3QgW25vdGlmaWNhdGlvbnMsIHNldE5vdGlmaWNhdGlvbnNdID0gdXNlU3RhdGUoW10pO1xuICBcbiAgY29uc3Qgc2hvd05vdGlmaWNhdGlvbiA9IChtZXNzYWdlLCB0eXBlID0gJ3N1Y2Nlc3MnKSA9PiB7XG4gICAgY29uc3QgaWQgPSBEYXRlLm5vdygpO1xuICAgIHNldE5vdGlmaWNhdGlvbnMocHJldiA9PiBbLi4ucHJldiwgeyBpZCwgbWVzc2FnZSwgdHlwZSB9XSk7XG4gICAgXG4gICAgLy8gQXV0by1yZW1vdmVyIGFww7NzIDMgc2VndW5kb3MgKHRlbXBvIHJlZHV6aWRvKVxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgc2V0Tm90aWZpY2F0aW9ucyhwcmV2ID0+IHByZXYuZmlsdGVyKG5vdGlmaWNhdGlvbiA9PiBub3RpZmljYXRpb24uaWQgIT09IGlkKSk7XG4gICAgfSwgMzAwMCk7XG4gICAgXG4gICAgcmV0dXJuIGlkO1xuICB9O1xuICBcbiAgY29uc3QgaGlkZU5vdGlmaWNhdGlvbiA9IChpZCkgPT4ge1xuICAgIHNldE5vdGlmaWNhdGlvbnMocHJldiA9PiBwcmV2LmZpbHRlcihub3RpZmljYXRpb24gPT4gbm90aWZpY2F0aW9uLmlkICE9PSBpZCkpO1xuICB9O1xuICBcbiAgLy8gQWRpY2lvbmFyIHNob3dOb3RpZmljYXRpb24gYW8gY29udGV4dG8gZ2xvYmFsXG4gIHBhZ2VQcm9wcy5zaG93Tm90aWZpY2F0aW9uID0gc2hvd05vdGlmaWNhdGlvbjtcbiAgXG4gIHJldHVybiAoXG4gICAgPEF1dGhQcm92aWRlcj5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMFwiIC8+XG4gICAgICA8L0hlYWQ+XG4gICAgICBcbiAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cbiAgICAgIFxuICAgICAgey8qIFJlbmRlcml6YXIgbm90aWZpY2HDp8O1ZXMgKi99XG4gICAgICA8ZGl2IGlkPVwibm90aWZpY2F0aW9uLWNvbnRhaW5lclwiPlxuICAgICAgICB7bm90aWZpY2F0aW9ucy5tYXAobm90aWZpY2F0aW9uID0+IChcbiAgICAgICAgICA8ZGl2IFxuICAgICAgICAgICAga2V5PXtub3RpZmljYXRpb24uaWR9IFxuICAgICAgICAgICAgY2xhc3NOYW1lPXtgbm90aWZpY2F0aW9uICR7bm90aWZpY2F0aW9uLnR5cGV9IHNob3dgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibm90aWZpY2F0aW9uLWljb25cIj5cbiAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPXtgZmFzICR7bm90aWZpY2F0aW9uLnR5cGUgPT09ICdzdWNjZXNzJyA/ICdmYS1jaGVjay1jaXJjbGUnIDogJ2ZhLWV4Y2xhbWF0aW9uLWNpcmNsZSd9YH0+PC9pPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5vdGlmaWNhdGlvbi1jb250ZW50XCI+XG4gICAgICAgICAgICAgIDxwPntub3RpZmljYXRpb24ubWVzc2FnZX08L3A+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm5vdGlmaWNhdGlvbi1jbG9zZSBtbC00XCJcbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGlkZU5vdGlmaWNhdGlvbihub3RpZmljYXRpb24uaWQpfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYXMgZmEtdGltZXNcIj48L2k+XG4gICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKSl9XG4gICAgICA8L2Rpdj5cbiAgICA8L0F1dGhQcm92aWRlcj5cbiAgKTtcbn0iXSwibmFtZXMiOlsiSGVhZCIsInVzZVN0YXRlIiwiQXV0aFByb3ZpZGVyIiwiQXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIiwibm90aWZpY2F0aW9ucyIsInNldE5vdGlmaWNhdGlvbnMiLCJzaG93Tm90aWZpY2F0aW9uIiwibWVzc2FnZSIsInR5cGUiLCJpZCIsIkRhdGUiLCJub3ciLCJwcmV2Iiwic2V0VGltZW91dCIsImZpbHRlciIsIm5vdGlmaWNhdGlvbiIsImhpZGVOb3RpZmljYXRpb24iLCJtZXRhIiwibmFtZSIsImNvbnRlbnQiLCJkaXYiLCJtYXAiLCJjbGFzc05hbWUiLCJpIiwicCIsImJ1dHRvbiIsIm9uQ2xpY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./services/api.js":
/*!*************************!*\
  !*** ./services/api.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Configuração base da API\nconst API_URL = \"http://localhost:8000\" || 0;\n/**\n * Verifica se o backend está disponível\n * @returns {Promise<boolean>} true se o backend estiver disponível\n */ async function isBackendAvailable() {\n    try {\n        // Tentamos listar buckets com credenciais inválidas para verificar se o servidor está online\n        // Isso vai falhar com 401 ou 400, mas confirma que o servidor está respondendo\n        const response = await fetch(`${API_URL}/buckets`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            // Adicionando modo no-cors para evitar problemas de CORS durante a verificação\n            mode: \"cors\"\n        });\n        // Mesmo com erro 401 (Unauthorized) ou 400 (Bad Request), o servidor está disponível\n        return response.status === 401 || response.status === 400 || response.ok;\n    } catch (error) {\n        console.error(\"Backend n\\xe3o dispon\\xedvel:\", error);\n        return false;\n    }\n}\n/**\n * Serviço para comunicação com o backend\n */ const apiService = {\n    /**\n   * Verifica se o backend está disponível\n   * @returns {Promise<boolean>} true se o backend estiver disponível\n   */ checkBackend: async ()=>{\n        return await isBackendAvailable();\n    },\n    /**\n   * Valida as credenciais AWS\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @returns {Promise<Object>} Resultado da validação\n   */ validateCredentials: async (accessKey, secretKey)=>{\n        // Verificar primeiro se o backend está disponível\n        if (!await isBackendAvailable()) {\n            return {\n                success: false,\n                error: \"Backend n\\xe3o dispon\\xedvel. Verifique se o servidor est\\xe1 em execu\\xe7\\xe3o.\"\n            };\n        }\n        try {\n            // Usar o endpoint /auth que existe no backend\n            const response = await fetch(`${API_URL}/auth`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                // Usar os nomes de parâmetros corretos: access_key e secret_key\n                body: JSON.stringify({\n                    access_key: accessKey,\n                    secret_key: secretKey\n                })\n            });\n            if (response.status === 404) {\n                return {\n                    success: false,\n                    error: \"Endpoint n\\xe3o encontrado. Verifique se o backend implementa /auth\"\n                };\n            }\n            if (!response.ok) {\n                return {\n                    success: false,\n                    error: `Erro do servidor: ${response.status} ${response.statusText}`\n                };\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Erro ao validar credenciais:\", error);\n            return {\n                success: false,\n                error: \"Erro de conex\\xe3o com o servidor. Verifique se o backend est\\xe1 em execu\\xe7\\xe3o.\"\n            };\n        }\n    },\n    /**\n   * Lista todos os buckets S3\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @returns {Promise<Object>} Lista de buckets\n   */ listBuckets: async (accessKey, secretKey)=>{\n        try {\n            const response = await fetch(`${API_URL}/buckets`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"access_key\": accessKey,\n                    \"secret_key\": secretKey\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Erro ao listar buckets:\", error);\n            throw error;\n        }\n    },\n    /**\n   * Lista objetos em um bucket\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @param {string} bucket - Nome do bucket\n   * @param {string} prefix - Prefixo para filtrar objetos (opcional)\n   * @returns {Promise<Object>} Lista de objetos\n   */ listObjects: async (accessKey, secretKey, bucket, prefix = \"\")=>{\n        try {\n            const url = `${API_URL}/objects/${bucket}${prefix ? `?prefix=${encodeURIComponent(prefix)}` : \"\"}`;\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"access_key\": accessKey,\n                    \"secret_key\": secretKey\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            // Garantir que os prefixes estejam no formato correto\n            if (data.prefixes && Array.isArray(data.prefixes)) {\n                // Se já não estiver no formato { Prefix: string }\n                if (data.prefixes.length > 0 && typeof data.prefixes[0] === \"string\") {\n                    data.prefixes = data.prefixes.map((prefix)=>({\n                            Prefix: prefix\n                        }));\n                }\n            }\n            return {\n                ...data,\n                success: true\n            };\n        } catch (error) {\n            console.error(\"Erro ao listar objetos:\", error);\n            throw error;\n        }\n    },\n    /**\n   * Obtém o tamanho total do bucket\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @param {string} bucket - Nome do bucket\n   * @returns {Promise<Object>} Informações sobre o tamanho do bucket\n   */ getBucketSize: async (accessKey, secretKey, bucket)=>{\n        try {\n            const response = await fetch(`${API_URL}/bucket-size/${bucket}`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"access_key\": accessKey,\n                    \"secret_key\": secretKey\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Erro ao obter tamanho do bucket:\", error);\n            throw error;\n        }\n    },\n    /**\n   * Cria um novo bucket\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @param {string} bucketName - Nome do bucket\n   * @param {string} region - Região AWS (opcional)\n   * @returns {Promise<Object>} Resultado da operação\n   */ createBucket: async (accessKey, secretKey, bucketName, region = \"us-east-1\")=>{\n        try {\n            const response = await fetch(`${API_URL}/create-bucket`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"access_key\": accessKey,\n                    \"secret_key\": secretKey\n                },\n                body: JSON.stringify({\n                    bucket_name: bucketName,\n                    region\n                })\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Erro ao criar bucket:\", error);\n            throw error;\n        }\n    },\n    /**\n   * Faz upload de arquivos para um bucket\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @param {string} bucket - Nome do bucket\n   * @param {FileList} files - Lista de arquivos para upload\n   * @param {string} prefix - Prefixo para os arquivos (opcional)\n   * @param {Function} progressCallback - Função de callback para progresso\n   * @returns {Promise<Object>} Resultado da operação\n   */ uploadFiles: async (accessKey, secretKey, bucket, files, prefix = \"\", progressCallback = null)=>{\n        try {\n            // Limite para upload multipart (5MB)\n            const MULTIPART_THRESHOLD = 5 * 1024 * 1024;\n            // Tamanho da parte para upload multipart (5MB)\n            const PART_SIZE = 5 * 1024 * 1024;\n            // Verificar se há arquivos grandes que precisam de upload multipart\n            const largeFiles = Array.from(files).filter((file)=>file.size > MULTIPART_THRESHOLD);\n            const smallFiles = Array.from(files).filter((file)=>file.size <= MULTIPART_THRESHOLD);\n            // Resultados dos uploads\n            const results = [];\n            // Upload de arquivos pequenos usando o método padrão\n            if (smallFiles.length > 0) {\n                const formData = new FormData();\n                smallFiles.forEach((file)=>{\n                    formData.append(\"files\", file);\n                });\n                if (prefix) {\n                    formData.append(\"prefix\", prefix);\n                }\n                const response = await fetch(`${API_URL}/upload/${bucket}`, {\n                    method: \"POST\",\n                    headers: {\n                        \"access_key\": accessKey,\n                        \"secret_key\": secretKey\n                    },\n                    body: formData\n                });\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const result = await response.json();\n                results.push(result);\n            }\n            // Upload de arquivos grandes usando multipart\n            for (const file of largeFiles){\n                const key = prefix ? `${prefix}${file.name}` : file.name;\n                // Iniciar upload multipart\n                const initResponse = await fetch(`${API_URL}/multipart/init`, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"access_key\": accessKey,\n                        \"secret_key\": secretKey\n                    },\n                    body: JSON.stringify({\n                        bucket,\n                        key\n                    })\n                });\n                if (!initResponse.ok) {\n                    throw new Error(`HTTP error! status: ${initResponse.status}`);\n                }\n                const initResult = await initResponse.json();\n                const uploadId = initResult.uploadId;\n                // Dividir o arquivo em partes\n                const totalParts = Math.ceil(file.size / PART_SIZE);\n                const parts = [];\n                // Fazer upload de cada parte\n                for(let i = 0; i < totalParts; i++){\n                    const start = i * PART_SIZE;\n                    const end = Math.min(start + PART_SIZE, file.size);\n                    const chunk = file.slice(start, end);\n                    const partResponse = await fetch(`${API_URL}/multipart/part?bucket=${bucket}&key=${encodeURIComponent(key)}&uploadId=${uploadId}&partNumber=${i + 1}`, {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/octet-stream\",\n                            \"access_key\": accessKey,\n                            \"secret_key\": secretKey\n                        },\n                        body: chunk\n                    });\n                    if (!partResponse.ok) {\n                        // Abortar upload em caso de erro\n                        await fetch(`${API_URL}/multipart/abort`, {\n                            method: \"POST\",\n                            headers: {\n                                \"Content-Type\": \"application/json\",\n                                \"access_key\": accessKey,\n                                \"secret_key\": secretKey\n                            },\n                            body: JSON.stringify({\n                                bucket,\n                                key,\n                                uploadId\n                            })\n                        });\n                        throw new Error(`HTTP error! status: ${partResponse.status}`);\n                    }\n                    const partResult = await partResponse.json();\n                    parts.push({\n                        ETag: partResult.ETag,\n                        PartNumber: i + 1\n                    });\n                    // Atualizar progresso\n                    if (progressCallback) {\n                        const progress = Math.round((i + 1) / totalParts * 100);\n                        progressCallback(progress);\n                    }\n                }\n                // Completar upload multipart\n                const completeResponse = await fetch(`${API_URL}/multipart/complete`, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        \"access_key\": accessKey,\n                        \"secret_key\": secretKey\n                    },\n                    body: JSON.stringify({\n                        bucket,\n                        key,\n                        uploadId,\n                        parts\n                    })\n                });\n                if (!completeResponse.ok) {\n                    throw new Error(`HTTP error! status: ${completeResponse.status}`);\n                }\n                const completeResult = await completeResponse.json();\n                results.push(completeResult);\n            }\n            return {\n                success: true,\n                message: `${files.length} arquivo(s) enviado(s) com sucesso`,\n                results\n            };\n        } catch (error) {\n            console.error(\"Erro ao fazer upload:\", error);\n            throw error;\n        }\n    },\n    /**\n   * Faz download de um objeto\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @param {string} bucket - Nome do bucket\n   * @param {string} key - Chave do objeto\n   * @returns {Promise<Blob>} Blob do arquivo\n   */ downloadObject: async (accessKey, secretKey, bucket, key)=>{\n        try {\n            const encodedKey = encodeURIComponent(key);\n            const response = await fetch(`${API_URL}/download/${bucket}/${encodedKey}`, {\n                method: \"GET\",\n                headers: {\n                    \"access_key\": accessKey,\n                    \"secret_key\": secretKey\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            return await response.blob();\n        } catch (error) {\n            console.error(\"Erro ao fazer download:\", error);\n            throw error;\n        }\n    },\n    /**\n   * Faz download de uma pasta inteira como ZIP\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @param {string} bucket - Nome do bucket\n   * @param {string} prefix - Prefixo da pasta\n   * @returns {Promise<Blob>} Blob do arquivo ZIP\n   */ downloadFolder: async (accessKey, secretKey, bucket, prefix)=>{\n        try {\n            const encodedPrefix = encodeURIComponent(prefix);\n            const response = await fetch(`${API_URL}/download-folder/${bucket}/${encodedPrefix}`, {\n                method: \"GET\",\n                headers: {\n                    \"access_key\": accessKey,\n                    \"secret_key\": secretKey\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            return await response.blob();\n        } catch (error) {\n            console.error(\"Erro ao fazer download da pasta:\", error);\n            throw error;\n        }\n    },\n    /**\n   * Faz download de um bucket inteiro como ZIP\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @param {string} bucket - Nome do bucket\n   * @returns {Promise<Blob>} Blob do arquivo ZIP\n   */ downloadBucket: async (accessKey, secretKey, bucket)=>{\n        try {\n            const response = await fetch(`${API_URL}/download-bucket/${bucket}`, {\n                method: \"GET\",\n                headers: {\n                    \"access_key\": accessKey,\n                    \"secret_key\": secretKey\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            return await response.blob();\n        } catch (error) {\n            console.error(\"Erro ao fazer download do bucket:\", error);\n            throw error;\n        }\n    },\n    /**\n   * Faz download de múltiplos objetos como ZIP\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @param {string} bucket - Nome do bucket\n   * @param {string[]} keys - Lista de chaves dos objetos\n   * @returns {Promise<Blob>} Blob do arquivo ZIP\n   */ downloadMultipleObjects: async (accessKey, secretKey, bucket, keys)=>{\n        try {\n            const response = await fetch(`${API_URL}/download-multiple/${bucket}`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"access_key\": accessKey,\n                    \"secret_key\": secretKey\n                },\n                body: JSON.stringify({\n                    keys\n                })\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            return await response.blob();\n        } catch (error) {\n            console.error(\"Erro ao fazer download de m\\xfaltiplos objetos:\", error);\n            throw error;\n        }\n    },\n    /**\n   * Deleta um objeto do bucket\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @param {string} bucket - Nome do bucket\n   * @param {string} key - Chave do objeto\n   * @returns {Promise<Object>} Resultado da operação\n   */ deleteObject: async (accessKey, secretKey, bucket, key)=>{\n        try {\n            const encodedKey = encodeURIComponent(key);\n            const response = await fetch(`${API_URL}/object/${bucket}/${encodedKey}`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"access_key\": accessKey,\n                    \"secret_key\": secretKey\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Erro ao deletar objeto:\", error);\n            throw error;\n        }\n    },\n    /**\n   * Deleta múltiplos objetos de um bucket\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @param {string} bucket - Nome do bucket\n   * @param {string[]} keys - Lista de chaves dos objetos\n   * @returns {Promise<Object>} Resultado da operação\n   */ deleteObjects: async (accessKey, secretKey, bucket, keys)=>{\n        try {\n            const response = await fetch(`${API_URL}/objects/${bucket}`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"access_key\": accessKey,\n                    \"secret_key\": secretKey\n                },\n                body: JSON.stringify({\n                    keys\n                })\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Erro ao deletar objetos:\", error);\n            throw error;\n        }\n    },\n    /**\n   * Deleta um bucket\n   * @param {string} accessKey - Access Key ID da AWS\n   * @param {string} secretKey - Secret Access Key da AWS\n   * @param {string} bucket - Nome do bucket\n   * @returns {Promise<Object>} Resultado da operação\n   */ deleteBucket: async (accessKey, secretKey, bucket)=>{\n        try {\n            const response = await fetch(`${API_URL}/bucket/${bucket}`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"access_key\": accessKey,\n                    \"secret_key\": secretKey\n                }\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            return await response.json();\n        } catch (error) {\n            console.error(\"Erro ao deletar bucket:\", error);\n            throw error;\n        }\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (apiService);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./services/api.js\n");

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/_app.js"));
module.exports = __webpack_exports__;

})();